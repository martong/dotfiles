unbind C-b
set -g prefix C-h

# Use the below command to vorbid autorename on the actual window
# set-option allow-rename off

set -g mouse on

set-option -g status on
set-option -g default-shell /usr/bin/zsh
# escape-time 500 causes disturbing delay in vim and in zsh zle when in vim
# mode.  escape-time 0 results in flaky behavior with Meta combinations (e.g.
# M-l), often tmux intercept the combination as an Esc sequence (e.g. Esc then
# l).
set -sg escape-time 10
set -sg repeat-time 0

bind-key -n M-Left previous-window
bind-key -n M-Right next-window
bind-key -n M-Down swap-window -t -1
bind-key -n M-Up swap-window -t +1
bind-key h select-pane -L
bind-key l select-pane -R
bind-key j select-pane -D
bind-key k select-pane -U
bind-key -n M-h previous-window
bind-key -n M-l next-window
bind-key -n M-j switch-client -n
bind-key -n M-k switch-client -p

bind-key c new-window -c '#{pane_current_path}'
bind-key v split-window -h -c '#{pane_current_path}'
unbind s
bind-key s split-window -c '#{pane_current_path}'
bind-key S choose-session

bind-key 0 select-pane -t 0
bind-key 1 select-pane -t 1
bind-key 2 select-pane -t 2
bind-key 3 select-pane -t 3

# Copy mode
setw -g mode-keys vi
unbind p
bind-key p paste-buffer
bind-key escape copy-mode
# set-clipboard that will try to copy your selection to the x-clipboard with
# an escape sequence. Gnome-terminal does not support this method of using
# the clipboard, which is the default terminal in Ubuntu.
# https://unix.stackexchange.com/questions/348913/copy-selection-to-a-clipboard-in-tmux
set-option -s set-clipboard off
bind-key -T copy-mode-vi 'v' send -X begin-selection
# This would just simply copy the selection internally in tmux
#bind-key -T copy-mode-vi 'y' send -X copy-selection
# We have to end the selection manually after copy-pipe with clear-selection
bind-key -T copy-mode-vi 'y' send -X copy-pipe "xclip -selection clipboard -i" \; send -X clear-selection
bind-key -T copy-mode-vi MouseDragEnd1Pane send -X copy-pipe "xclip -selection clipboard -i" \; send -X clear-selection
# This would just simply copy the selection internally in tmux
#bind-key -T copy-mode-vi MouseDragEnd1Pane send -X copy-selection

# Let vim work with PageUp, PageDown, Left, Right, Down, Up keys
setw -g xterm-keys on

unbind C-Up
unbind C-Down
unbind C-Left
unbind C-Right

set-window-option -g window-status-current-fg white
set-window-option -g window-status-current-bg red
set-window-option -g window-status-current-attr bright

set -g history-limit 100000

set-option -g status-interval 2
set-option -g status-justify "left"
set-option -g status-left-length 60
set-option -g status-right-length 90
set-option -g status-right '#{prefix_highlight} #[fg=white,nobright][#[fg=black,bright]#(uptime | rev | cut -d":" -f1 | rev | sed s/,//g )#[fg=white,nobright] ]'

# w b should behave similarly to vim
set-option -g word-separators ' $.-=&:,()[]{}<>'

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
# To make scroll jump 3 lines
set -g @plugin 'nhdaly/tmux-better-mouse-mode'
# Restore tmux session
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @resurrect-capture-pane-contents 'on'
# Automatically save and restore tmux session
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @continuum-restore 'on'
# highlight when the prefix had been pushed
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
# Predefined searches
set -g @plugin 'tmux-plugins/tmux-copycat'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
